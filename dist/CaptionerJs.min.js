/*!
 * CaptionerJs | Beautiful and semantically correct captions
 * http://francodacosta.com/captionerjs/
 *
 * Copyright 2013-2014, Nuno Costa <nuno@francodacosta.com>
 * Released under the MIT license
 * https://github.com/francodacosta/CaptionerJs/blob/master/LICENSE
 *
 */
(function(){var a,b,c,d,e=function(a,b){return function(){return a.apply(b,arguments)}},f={}.hasOwnProperty,g=function(a,b){function c(){this.constructor=a}for(var d in b)f.call(b,d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a};a=function(){function a(a,b,c,d){this.el=a,this.title=b,this.description=c,this.options=d,this.wrapElement=e(this.wrapElement,this)}return a.prototype.wrapElement=function(a){var b;return b=this.el.wrap('<figure class="'+this.options.cls+"-container "+a+'" itemscope="itemscope" itemtype="http://schema.org/Photograph"></figure>').parent(),b.width(this.el.attr("width")||this.el[0].style.width||this.el.width()),this.el.css({width:"100%"}),this.el.attr("itemprop","image"),this.el.attr("width",""),b},a.prototype.generateTitleHtml=function(a){return a?'<span class="caption-title"  itemprop="name" >'+a+"</span>":""},a.prototype.generateDescriptionHtml=function(a){return a?'<span class="caption-description"  itemprop="description" >'+a+"</span>":""},a}(),b=function(){function a(a,b){var c;this.el=a,c={type:"animated",cls:"CaptionerJs",options:{startClosed:!0}},this.options=$.extend({},c,b),console.log("options",this.options)}return a.prototype.addCaption=function(a,b){if(console.log(this.el),!this.el.attr("data-captioner-enabled")){if(this.el.attr("data-captioner-enabled",!0),"stacked"===this.options.type)return new d(this.el,a,b,this.options,"stacked");if("static"===this.options.type)return new d(this.el,a,b,this.options,"static");if("animated"===this.options.type)return new c(this.el,a,b,this.options);throw new Error("Invalid caption type : "+this.options.type)}},a.prototype.removeCaption=function(){return this.el.attr("data-captioner-enabled",!1),this.el.find("figcaption").remove(),this.el.unrap()},a}(),c=function(a){function b(a,c,d,e){var f,g;this.el=a,this.title=c,this.description=d,this.options=e,b.__super__.constructor.call(this,this.el,this.title,this.description,this.options),g=this.wrapElement("bottom-animated"),f=$('<figcaption class="closed">\n    '+this.generateTitleHtml(this.title)+"\n    "+this.generateCloseButtonHtml()+"\n    "+this.generateDescriptionHtml(this.description)+"\n</figcaption>"),f.hide(),g.append(f),this.captionHeight=f.outerHeight(),f.css({bottom:-this.captionHeight}),console.log("start closed",this.options.options.startClosed),this.options.options.startClosed&&f.addClass("open").removeClass("closed"),this.openCloseCaption(f),window.setTimeout(function(){return f.show(),f.click()},100)}return g(b,a),b.prototype.openCloseCaption=function(a){var b;return b=this,a.on("click",function(){return console.log("has closed class",a.hasClass("closed")),a.hasClass("closed")?(a.removeClass("closed"),a.addClass("open"),void a.css("bottom",0)):(a.addClass("closed"),a.removeClass("open"),a.css("bottom",-1*b.captionHeight+a.find(".caption-title").position().top+a.find(".caption-title").outerHeight()))})},b.prototype.generateCloseButtonHtml=function(){return'<span class="caption-actions caption-close">&caron;</span><span class="caption-actions caption-open">&circ;</span>'},b}(a),d=function(a){function b(a,c,d,e,f){var g,h;this.el=a,this.title=c,this.description=d,this.options=e,b.__super__.constructor.call(this,this.el,this.title,this.description,this.options),h=this.wrapElement(f||"stacked"),g="<figcaption>\n    "+this.generateTitleHtml(this.title)+"\n    "+this.generateDescriptionHtml(this.description)+"\n</figcaption>",h.append($(g))}return g(b,a),b}(a),function($){$(document).ready(function(){return $(document).find("[role=caption]").each(function(a,b){return $(b).CaptionerJs()})}),$.fn.CaptionerJs=function(a){var c,d,e,f;return f=decodeURIComponent(this.attr("title")||this.attr("data-title")||""),d=decodeURIComponent(this.attr("alt")||this.attr("data-description")||""),a=a||{},c={type:this.data("captioner-type")||"static",cls:this.data("captioner-class")||"CaptionerJs",options:{startClosed:this.data("captioner-start-closed")||!1}},a=$.extend({},c,a),e=new b(this,a),e.addCaption(f,d),this}}(jQuery)}).call(this);